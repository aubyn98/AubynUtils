"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const b=require("lodash"),l=Object.prototype.toString,h=Object.prototype.hasOwnProperty,u=Object.getOwnPropertyDescriptors,d=Object.defineProperty,a=Object.defineProperties;function f(t){return l.call(t).slice(8,-1)}function w(t,r){return t==null?!1:h.call(t,r)}function j(t){return typeof t>"u"||t===null}function m(t){return f(t)==="Array"?t.map(r=>a({},u(r))):f(t)==="Object"?a({},u(t)):t}function P(t){const r=new WeakMap;function s(e){if(e==null)return e;const c=f(e);if(["String","Number","Boolean","Symbol","BigInt","Function"].includes(c))return e;if(r.has(e))return r.get(e);let n;switch(c){case"Array":n=[],r.set(e,n),e.forEach(i=>n.push(s(i)));break;case"Date":n=new Date(e),r.set(e,n);break;case"RegExp":n=new RegExp(e.source,e.flags),n.lastIndex=e.lastIndex,r.set(e,n);break;case"Map":n=new Map,r.set(e,n),e.forEach((i,o)=>n.set(s(o),s(i)));break;case"Set":n=new Set,r.set(e,n),e.forEach(i=>n.add(s(i)));break;case"Error":n=new e.constructor(e.message),Object.getOwnPropertyNames(e).forEach(i=>{i!=="stack"&&(n[i]=s(e[i]))}),r.set(e,n);break;default:n=Object.create(Object.getPrototypeOf(e)),r.set(e,n);const p=Object.getOwnPropertyDescriptors(e);Object.getOwnPropertyNames(p).forEach(i=>{const o=p[i];o.value!==void 0&&(o.value=s(o.value)),Object.defineProperty(n,i,o)});break}return n}return s(t)}function D(t){const r=u(t);return Object.keys(r).filter(s=>r[s].writable||r[s].set)}function y(t){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;const s=u(t);return Object.keys(s).reduce((e,c)=>(s[c].set&&d(e,c,s[c]),s[c].writable&&(r&&f(t[c])==="Object"?e[c]=y(t[c],r):d(e,c,s[c])),e),{})}function S(t){const r=u(t);return Object.keys(r).filter(s=>r[s].get&&!r[s].set)}function O(t){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;const s=u(t);return Object.keys(s).reduce((e,c)=>(r&&f(t[c])==="Object"?e[c]=O(t[c],r):s[c].get&&!s[c].set&&(e[c]=t[c]),e),{})}function E(t,r,s){var e,c;let n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};(e=n.prefix)!==null&&e!==void 0||(n.prefix=""),(c=n.direction)!==null&&c!==void 0||(n.direction="left");const{prefix:p,direction:i}=n;s.forEach(o=>{const g=p?p+b.capitalize(o):o;i==="left"&&(t[g]=r[o]),i==="right"&&(t[o]=r[g])})}exports.cloneDeepWithDescriptors=P;exports.cloneWithDescriptors=m;exports.getAssignKey=D;exports.getOnlyGetterKey=S;exports.getRawType=f;exports.hasOwnProperty=w;exports.isNullish=j;exports.pickAssigns=y;exports.pickOnlyGetter=O;exports.transformSetVal=E;
