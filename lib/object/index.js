"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const l=require("lodash"),h=Object.prototype.toString,w=Object.prototype.hasOwnProperty,p=Object.getOwnPropertyDescriptors,a=Object.defineProperty,y=Object.defineProperties;function f(t){return h.call(t).slice(8,-1)}function j(t,r){return t==null?!1:w.call(t,r)}function m(t){return typeof t>"u"||t===null}function P(t){return f(t)==="Array"?t.map(r=>y({},p(r))):f(t)==="Object"?y({},p(t)):t}function D(t){const r=new WeakMap;function s(e){if(e==null)return e;const o=f(e);if(["String","Number","Boolean","Symbol","BigInt","Function"].includes(o))return e;if(r.has(e))return r.get(e);let n;switch(o){case"Array":n=[],r.set(e,n),e.forEach(c=>n.push(s(c)));break;case"Date":n=new Date(e),r.set(e,n);break;case"RegExp":n=new RegExp(e.source,e.flags),n.lastIndex=e.lastIndex,r.set(e,n);break;case"Map":n=new Map,r.set(e,n),e.forEach((c,u)=>n.set(s(u),s(c)));break;case"Set":n=new Set,r.set(e,n),e.forEach(c=>n.add(s(c)));break;case"Error":const g=e.constructor;n=new g(e.message),Object.getOwnPropertyNames(e).forEach(c=>{n[c]=s(e[c])}),r.set(e,n);break;default:const d=Object.getPrototypeOf(e);n=Object.create(d),r.set(e,n);const i=Object.getOwnPropertyDescriptors(e);Object.getOwnPropertyNames(i).forEach(c=>{const u=i[c];u.value!==void 0&&(u.value=s(u.value)),Object.defineProperty(n,c,u)});break}return n}return s(t)}function E(t){const r=p(t);return Object.keys(r).filter(s=>r[s].writable||r[s].set)}function O(t){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;const s=p(t);return Object.keys(s).reduce((e,o)=>(s[o].set&&a(e,o,s[o]),s[o].writable&&(r&&f(t[o])==="Object"?e[o]=O(t[o],r):a(e,o,s[o])),e),{})}function S(t){const r=p(t);return Object.keys(r).filter(s=>r[s].get&&!r[s].set)}function b(t){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;const s=p(t);return Object.keys(s).reduce((e,o)=>(r&&f(t[o])==="Object"?e[o]=b(t[o],r):s[o].get&&!s[o].set&&(e[o]=t[o]),e),{})}function x(t,r,s){var e,o;let n=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};(e=n.prefix)!==null&&e!==void 0||(n.prefix=""),(o=n.direction)!==null&&o!==void 0||(n.direction="left");const{prefix:g,direction:d}=n;s.forEach(i=>{const c=g?g+l.capitalize(i):i;d==="left"&&(t[c]=r[i]),d==="right"&&(t[i]=r[c])})}exports.cloneDeepWithDescriptors=D;exports.cloneWithDescriptors=P;exports.getAssignKey=E;exports.getOnlyGetterKey=S;exports.getRawType=f;exports.hasOwnProperty=j;exports.isNullish=m;exports.pickAssigns=O;exports.pickOnlyGetter=b;exports.transformSetVal=x;
